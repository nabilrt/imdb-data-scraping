group_by(CINEMA_NAME_LENGTH) %>%
summarise(cinema_num_of_review = sum(CINEMA_NUMBER_OF_REVIEWS)) %>%
arrange(desc(CINEMA_NUMBER_OF_REVIEWS))
mydata_new <- total_movies %>%
mutate(CINEMA_NAME_LENGTH = paste(CINEMA_NAME, "(", CINEMA_LENGTH, "min)", sep = " ")) %>%
select(CINEMA_NAME_LENGTH, CINEMA_NUMBER_OF_REVIEWS)
mydata_grouped <- mydata_new %>%
group_by(CINEMA_NAME_LENGTH) %>%
summarise(cinema_num_of_review = sum(CINEMA_NUMBER_OF_REVIEWS)) %>%
arrange(desc(CINEMA_NUMBER_OF_REVIEWS))
total_movies
mydata_new <- total_movies %>%
mutate(CINEMA_NAME_LENGTH = paste(CINEMA_NAME, "(", CINEMA_LENGTH, "min)", sep = " ")) %>%
select(CINEMA_NAME_LENGTH, CINEMA_NUMBER_OF_REVIEWS)
mydata_grouped <- mydata_new %>%
group_by(CINEMA_NAME_LENGTH) %>%
summarise(cinema_num_of_review = sum(CINEMA_NUMBER_OF_REVIEWS)) %>%
arrange(desc(cinema_num_of_review))
top10_3 <- head(mydata_grouped, 10)
ggplot(top10_3, aes(x = CINEMA_NAME_LENGTH, y = CINEMA_NUMBER_OF_REVIEWS)) +
geom_bar(stat = "identity") +
xlab("Cinema Name and Length") +
ylab("Total Reviews") +
ggtitle("Top 10 Cinemas based on Cinema Length and Number of Reviews") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
mydata_new <- total_movies %>%
mutate(CINEMA_NAME_LENGTH = paste(CINEMA_NAME, "(", CINEMA_LENGTH, "min)", sep = " ")) %>%
select(CINEMA_NAME_LENGTH, CINEMA_NUMBER_OF_REVIEWS)
mydata_grouped <- mydata_new %>%
group_by(CINEMA_NAME_LENGTH) %>%
summarise(cinema_num_of_review = sum(CINEMA_NUMBER_OF_REVIEWS)) %>%
arrange(desc(cinema_num_of_review))
top10_3 <- head(mydata_grouped, 10)
ggplot(top10_3, aes(x = CINEMA_NAME_LENGTH, y = cinema_num_of_review)) +
geom_bar(stat = "identity") +
xlab("Cinema Name and Length") +
ylab("Total Reviews") +
ggtitle("Top 10 Cinemas based on Cinema Length and Number of Reviews") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
bins <- seq(0, 10, by=2)
# Create a new column with the bin label
labels <- c("1-2", "2-4", "4-6", "6-8", "8-10")
mydata$bin <- cut(total_movies$CINEMA_RATING, breaks=bins, labels=labels)
mydata=data.frame()
bins <- seq(0, 10, by=2)
# Create a new column with the bin label
labels <- c("1-2", "2-4", "4-6", "6-8", "8-10")
mydata$bin <- cut(total_movies$CINEMA_RATING, breaks=bins, labels=labels)
mydata=data.frame(total_movies$CINEMA_RATING)
bins <- seq(0, 10, by=2)
# Create a new column with the bin label
labels <- c("1-2", "2-4", "4-6", "6-8", "8-10")
mydata$bin <- cut(mydata$CINEMA_RATING, breaks=bins, labels=labels)
mydata=data.frame(total_movies$CINEMA_RATING)
bins <- seq(0, 10, by=2)
# Create a new column with the bin label
labels <- c("1-2", "2-4", "4-6", "6-8", "8-10")
mydata$bin <- cut(mydata$CINEMA_RATING, breaks=bins, labels=labels)
mydata=data.frame(total_movies$CINEMA_RATING)
bins <- seq(0, 10, by=2)
# Create a new column with the bin label
labels <- c("1-2", "2-4", "4-6", "6-8", "8-10")
mydata$bin <- cut(mydata$CINEMA_RATING, breaks=bins, labels=labels)
class(mydata$bin)
mydata$bin
total_movies$CINEMA_RATING
mydata
mydata=data.frame(total_movies$CINEMA_RATING)
bins <- seq(0, 10, by=2)
# Create a new column with the bin label
labels <- c("1-2", "2-4", "4-6", "6-8", "8-10")
mydata$bin <- cut(mydata$total_movies.CINEMA_RATING, breaks=bins, labels=labels)
#mydata$bin <- as.numeric(mydata$bin)
class(mydata$bin)
# Create a histogram
ggplot(mydata, aes(x=bin)) +
geom_histogram() +
xlab("Ratings") +
ylab("Frequency") +
ggtitle("Frequency based on Cinema Ratings") +
scale_x_continuous(breaks=c(1,2,3,4,5), labels=c("1-2", "2-4", "4-6", "6-8", "8-10"))
mydata=data.frame(total_movies$CINEMA_RATING)
bins <- seq(0, 10, by=2)
# Create a new column with the bin label
labels <- c("1-2", "2-4", "4-6", "6-8", "8-10")
mydata$bin <- cut(mydata$total_movies.CINEMA_RATING, breaks=bins, labels=labels)
# Create a histogram
ggplot(mydata, aes(x=bin)) +
geom_histogram() +
xlab("Ratings") +
ylab("Frequency") +
ggtitle("Frequency based on Cinema Ratings") +
scale_x_discrete(labels=c("1-2", "2-4", "4-6", "6-8", "8-10"))
mydata=data.frame(total_movies$CINEMA_RATING)
bins <- seq(0, 10, by=2)
# Create a new column with the bin label
labels <- c("1-2", "2-4", "4-6", "6-8", "8-10")
mydata$bin <- cut(mydata$total_movies.CINEMA_RATING, breaks=bins, labels=labels)
mydata$bin <- as.numeric(mydata$bin)
# Create a histogram
ggplot(mydata, aes(x=bin)) +
geom_histogram() +
xlab("Ratings") +
ylab("Frequency") +
ggtitle("Frequency based on Cinema Ratings") +
scale_x_continuous(breaks=c(1,2,3,4,5), labels=c("1-2", "2-4", "4-6", "6-8", "8-10"))
mydata=data.frame(total_movies$CINEMA_RATING)
bins <- seq(0, 10, by=2)
# Create a new column with the bin label
#labels <- c("1-2", "2-4", "4-6", "6-8", "8-10")
mydata$bin <- cut(mydata$total_movies.CINEMA_RATING, breaks=seq(8, 10, by=1), labels=seq(8, 10, by=1))
mydata=data.frame(total_movies$CINEMA_RATING)
bins <- seq(8, 10, by=0.5)
# Create a new column with the bin label
labels <- c("8-8.5", "8.6-9", "9-9.5", "9.6-10")
mydata$bin <- cut(mydata$total_movies.CINEMA_RATING, breaks=bins, labels=labels)
mydata$bin <- as.numeric(mydata$bin)
# Create a histogram
ggplot(mydata, aes(x=bin)) +
geom_histogram() +
xlab("Ratings") +
ylab("Frequency") +
ggtitle("Frequency based on Cinema Ratings") +
scale_x_continuous(breaks=c(1,2,3,4,5), labels=c("8-8.5", "8.6-9", "9-9.5", "9.6-10"))
mydata=data.frame(total_movies$CINEMA_RATING)
bins <- seq(8, 10, by=1)
# Create a new column with the bin label
labels <- c("8-9", "9-10")
mydata$bin <- cut(mydata$total_movies.CINEMA_RATING, breaks=bins, labels=labels)
mydata$bin <- as.numeric(mydata$bin)
# Create a histogram
ggplot(mydata, aes(x=bin)) +
geom_histogram() +
xlab("Ratings") +
ylab("Frequency") +
ggtitle("Frequency based on Cinema Ratings") +
scale_x_continuous(breaks=c(1,2,3,4,5), labels=c("8-9", "9-10"))
mydata=data.frame(total_movies$CINEMA_RATING)
bins <- seq(8, 10, by=1)
# Create a new column with the bin label
labels <- c("8-9", "9-10")
mydata$bin <- cut(mydata$total_movies.CINEMA_RATING, breaks=bins, labels=labels)
mydata$bin <- as.numeric(mydata$bin)
# Create a histogram
ggplot(mydata, aes(x=bin)) +
geom_histogram() +
xlab("Ratings") +
ylab("Frequency") +
ggtitle("Frequency based on Cinema Ratings") +
scale_x_continuous(breaks=c(1,2), labels=c("8-9", "9-10"))
mydata_2=data.frame(total_movies$CINEMA_LENGTH)
bins_2 <- seq(50, 250, by=50)
mydata_2=data.frame(total_movies$CINEMA_LENGTH)
bins_2 <- seq(50, 250, by=50)
# Create a new column with the bin label
labels_2 <- c("50-100", "100-150","150-200","200-250")
mydata_2$bin <- cut(mydata_2$total_movies.CINEMA_LENGTH, breaks=bins_2, labels=labels_2)
mydata_2$bin <- as.numeric(mydata_2$bin)
# Create a histogram
rating_frequency=ggplot(mydata_2, aes(x=bin)) +
geom_histogram() +
xlab("Length") +
ylab("Frequency") +
ggtitle("Frequency based on Cinema Length") +
scale_x_continuous(breaks=c(1,2,3,4), labels=c("50-100", "100-150","150-200","200-250"))
rating_frequency
uncleaned_movies=read.csv("movie_scraped_data_part_1.csv")
#UI
library(shiny)
library(DT)
install.packages("DT")
install.packages("DT")
library(shiny)
library(DT)
install.packages("htmltools")
install.packages("htmltools")
library(shiny)
library(DT)
library(shiny); runApp('full.r')
library(shiny)
library(DT)
packageVersion("htmltools")
install.packages("htmltools")
install.packages("htmltools")
packageVersion("htmltools")
library(shiny)
library(DT)
# Define UI
ui <- fluidPage(
# Text above data frames
h2("Data Collection and Cleaning"),
hr(),
# Data frame 1
h3("Initial Raw Data of TOP 150 IMDB Movies and their Links"),
DTOutput("table1"),
# Data frame 2
h3("Initial Raw Data of TOP 150 Movies and their details"),
DTOutput("table2"),
# Data frame 3
h3("Pre-processed data of TOP 150 Movies"),
DTOutput("table3")
)
# Define server
server <- function(input, output) {
# Render data frame 1
output$table1 <- renderDT({
datatable(final_data, options=list(pageLength=10))
})
# Render data frame 2
output$table2 <- renderDT({
datatable(uncleaned_movies, options=list(pageLength=10))
})
# Render data frame 3
output$table3 <- renderDT({
datatable(total_movies, options=list(pageLength=10))
})
}
# Run app
shinyApp(ui, server)
library(shiny)
library(DT)
# Define UI
ui <- fluidPage(
tags$style(type = "text/css", "body {padding: 10px;}"),
# Add left panel with text
tags$div(
style = "padding-right: 10px; float: left; width: 25%",
h2("Welcome to Data Processing Dashboard!"),
p("It contains complete steps of Data collecting to cleaning and visualization")
),
tags$div(
style = "padding-left: 10px; float: right; width: 75%",
# Data frame 1
h3("Initial Raw Data of TOP 150 IMDB Movies and their Links"),
DTOutput("table1"),
# Data frame 2
h3("Initial Raw Data of TOP 150 Movies and their details"),
DTOutput("table2"),
# Data frame 3
h3("Pre-processed data of TOP 150 Movies"),
DTOutput("table3")
)
)
# Define server
server <- function(input, output) {
# Render data frame 1
output$table1 <- renderDT({
datatable(final_data, options=list(pageLength=10))
})
# Render data frame 2
output$table2 <- renderDT({
datatable(uncleaned_movies, options=list(pageLength=10))
})
# Render data frame 3
output$table3 <- renderDT({
datatable(total_movies, options=list(pageLength=10))
})
}
# Run app
shinyApp(ui, server)
top_10_movies_by_review=ggplot(top10_2, aes(x = reorder(CINEMA_NAME, CINEMA_POPULARITY), y = CINEMA_POPULARITY)) +
geom_bar(stat = "identity") +
xlab("Cinema Name") +
ylab("Popularity") +
ggtitle("Top 10 Cinemas based on Popularity")+  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
library(ggplot2)
library(dplyr)
#TOP 10 MOVIES BASED ON NUMBER OF REVIEWS
total_movies_up <- total_movies %>%
arrange(desc(CINEMA_NUMBER_OF_REVIEWS))
top10 <- head(total_movies_up, 10)
top_10_movies_by_review=ggplot(top10, aes(x = reorder(CINEMA_NAME, CINEMA_NUMBER_OF_REVIEWS), y = CINEMA_NUMBER_OF_REVIEWS)) +
geom_bar(stat = "identity") +
xlab("Cinema Name") +
ylab("Total Reviews") +
ggtitle("Top 10 Cinemas based on Number of Reviews")+  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#TOP 10 MOVIES BASED ON POPULARITY
total_movies_up_2 <- total_movies %>%
arrange(desc(CINEMA_POPULARITY))
top10_2 <- head(total_movies_up_2, 10)
top_10_movies_by_review=ggplot(top10_2, aes(x = reorder(CINEMA_NAME, CINEMA_POPULARITY), y = CINEMA_POPULARITY)) +
geom_bar(stat = "identity") +
xlab("Cinema Name") +
ylab("Popularity") +
ggtitle("Top 10 Cinemas based on Popularity")+  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#TOP 10 MOVIES BASED ON NUMBER OF REVIEWS AND LENGTH
mydata_new <- total_movies %>%
mutate(CINEMA_NAME_LENGTH = paste(CINEMA_NAME, "(", CINEMA_LENGTH, "min)", sep = " ")) %>%
select(CINEMA_NAME_LENGTH, CINEMA_NUMBER_OF_REVIEWS)
mydata_grouped <- mydata_new %>%
group_by(CINEMA_NAME_LENGTH) %>%
summarise(cinema_num_of_review = sum(CINEMA_NUMBER_OF_REVIEWS)) %>%
arrange(desc(cinema_num_of_review))
top10_3 <- head(mydata_grouped, 10)
top_10_based_on_name_length=ggplot(top10_3, aes(x = CINEMA_NAME_LENGTH, y = cinema_num_of_review)) +
geom_bar(stat = "identity") +
xlab("Cinema Name and Length") +
ylab("Total Reviews") +
ggtitle("Top 10 Cinemas based on Cinema Length and Number of Reviews") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#RATING RANGES WITH FREQUENCIES
# Create bins based on the range of values
mydata=data.frame(total_movies$CINEMA_RATING)
bins <- seq(8, 10, by=1)
# Create a new column with the bin label
labels <- c("8-9", "9-10")
mydata$bin <- cut(mydata$total_movies.CINEMA_RATING, breaks=bins, labels=labels)
mydata$bin <- as.numeric(mydata$bin)
# Create a histogram
rating_frequency=ggplot(mydata, aes(x=bin)) +
geom_histogram() +
xlab("Ratings") +
ylab("Frequency") +
ggtitle("Frequency based on Cinema Ratings") +
scale_x_continuous(breaks=c(1,2), labels=c("8-9", "9-10"))
#MOVIE LENGTH RANGES WITH FREQUENCIES
mydata_2=data.frame(total_movies$CINEMA_LENGTH)
bins_2 <- seq(50, 250, by=50)
# Create a new column with the bin label
labels_2 <- c("50-100", "100-150","150-200","200-250")
mydata_2$bin <- cut(mydata_2$total_movies.CINEMA_LENGTH, breaks=bins_2, labels=labels_2)
mydata_2$bin <- as.numeric(mydata_2$bin)
# Create a histogram
rating_frequency=ggplot(mydata_2, aes(x=bin)) +
geom_histogram() +
xlab("Length") +
ylab("Frequency") +
ggtitle("Frequency based on Cinema Length") +
scale_x_continuous(breaks=c(1,2,3,4), labels=c("50-100", "100-150","150-200","200-250"))
rating_frequency
library(ggplot2)
library(dplyr)
#TOP 10 MOVIES BASED ON NUMBER OF REVIEWS
total_movies_up <- total_movies %>%
arrange(desc(CINEMA_NUMBER_OF_REVIEWS))
top10 <- head(total_movies_up, 10)
top_10_movies_by_review=ggplot(top10, aes(x = reorder(CINEMA_NAME, CINEMA_NUMBER_OF_REVIEWS), y = CINEMA_NUMBER_OF_REVIEWS)) +
geom_bar(stat = "identity") +
xlab("Cinema Name") +
ylab("Total Reviews") +
ggtitle("Top 10 Cinemas based on Number of Reviews")+  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#TOP 10 MOVIES BASED ON POPULARITY
total_movies_up_2 <- total_movies %>%
arrange(desc(CINEMA_POPULARITY))
top10_2 <- head(total_movies_up_2, 10)
top_10_movies_by_popularity=ggplot(top10_2, aes(x = reorder(CINEMA_NAME, CINEMA_POPULARITY), y = CINEMA_POPULARITY)) +
geom_bar(stat = "identity") +
xlab("Cinema Name") +
ylab("Popularity") +
ggtitle("Top 10 Cinemas based on Popularity")+  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#TOP 10 MOVIES BASED ON NUMBER OF REVIEWS AND LENGTH
mydata_new <- total_movies %>%
mutate(CINEMA_NAME_LENGTH = paste(CINEMA_NAME, "(", CINEMA_LENGTH, "min)", sep = " ")) %>%
select(CINEMA_NAME_LENGTH, CINEMA_NUMBER_OF_REVIEWS)
mydata_grouped <- mydata_new %>%
group_by(CINEMA_NAME_LENGTH) %>%
summarise(cinema_num_of_review = sum(CINEMA_NUMBER_OF_REVIEWS)) %>%
arrange(desc(cinema_num_of_review))
top10_3 <- head(mydata_grouped, 10)
top_10_based_on_name_length=ggplot(top10_3, aes(x = CINEMA_NAME_LENGTH, y = cinema_num_of_review)) +
geom_bar(stat = "identity") +
xlab("Cinema Name and Length") +
ylab("Total Reviews") +
ggtitle("Top 10 Cinemas based on Cinema Length and Number of Reviews") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#RATING RANGES WITH FREQUENCIES
# Create bins based on the range of values
mydata=data.frame(total_movies$CINEMA_RATING)
bins <- seq(8, 10, by=1)
# Create a new column with the bin label
labels <- c("8-9", "9-10")
mydata$bin <- cut(mydata$total_movies.CINEMA_RATING, breaks=bins, labels=labels)
mydata$bin <- as.numeric(mydata$bin)
# Create a histogram
rating_frequency=ggplot(mydata, aes(x=bin)) +
geom_histogram() +
xlab("Ratings") +
ylab("Frequency") +
ggtitle("Frequency based on Cinema Ratings") +
scale_x_continuous(breaks=c(1,2), labels=c("8-9", "9-10"))
#MOVIE LENGTH RANGES WITH FREQUENCIES
mydata_2=data.frame(total_movies$CINEMA_LENGTH)
bins_2 <- seq(50, 250, by=50)
# Create a new column with the bin label
labels_2 <- c("50-100", "100-150","150-200","200-250")
mydata_2$bin <- cut(mydata_2$total_movies.CINEMA_LENGTH, breaks=bins_2, labels=labels_2)
mydata_2$bin <- as.numeric(mydata_2$bin)
# Create a histogram
rating_frequency=ggplot(mydata_2, aes(x=bin)) +
geom_histogram() +
xlab("Length") +
ylab("Frequency") +
ggtitle("Frequency based on Cinema Length") +
scale_x_continuous(breaks=c(1,2,3,4), labels=c("50-100", "100-150","150-200","200-250"))
library(ggplot2)
library(dplyr)
#TOP 10 MOVIES BASED ON NUMBER OF REVIEWS
total_movies_up <- total_movies %>%
arrange(desc(CINEMA_NUMBER_OF_REVIEWS))
top10 <- head(total_movies_up, 10)
top_10_movies_by_review=ggplot(top10, aes(x = reorder(CINEMA_NAME, CINEMA_NUMBER_OF_REVIEWS), y = CINEMA_NUMBER_OF_REVIEWS)) +
geom_bar(stat = "identity") +
xlab("Cinema Name") +
ylab("Total Reviews") +
ggtitle("Top 10 Cinemas based on Number of Reviews")+  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#TOP 10 MOVIES BASED ON POPULARITY
total_movies_up_2 <- total_movies %>%
arrange(desc(CINEMA_POPULARITY))
top10_2 <- head(total_movies_up_2, 10)
top_10_movies_by_popularity=ggplot(top10_2, aes(x = reorder(CINEMA_NAME, CINEMA_POPULARITY), y = CINEMA_POPULARITY)) +
geom_bar(stat = "identity") +
xlab("Cinema Name") +
ylab("Popularity") +
ggtitle("Top 10 Cinemas based on Popularity")+  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#TOP 10 MOVIES BASED ON NUMBER OF REVIEWS AND LENGTH
mydata_new <- total_movies %>%
mutate(CINEMA_NAME_LENGTH = paste(CINEMA_NAME, "(", CINEMA_LENGTH, "min)", sep = " ")) %>%
select(CINEMA_NAME_LENGTH, CINEMA_NUMBER_OF_REVIEWS)
mydata_grouped <- mydata_new %>%
group_by(CINEMA_NAME_LENGTH) %>%
summarise(cinema_num_of_review = sum(CINEMA_NUMBER_OF_REVIEWS)) %>%
arrange(desc(cinema_num_of_review))
top10_3 <- head(mydata_grouped, 10)
top_10_based_on_name_length=ggplot(top10_3, aes(x = CINEMA_NAME_LENGTH, y = cinema_num_of_review)) +
geom_bar(stat = "identity") +
xlab("Cinema Name and Length") +
ylab("Total Reviews") +
ggtitle("Top 10 Cinemas based on Cinema Length and Number of Reviews") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#RATING RANGES WITH FREQUENCIES
# Create bins based on the range of values
mydata=data.frame(total_movies$CINEMA_RATING)
bins <- seq(8, 10, by=1)
# Create a new column with the bin label
labels <- c("8-9", "9-10")
mydata$bin <- cut(mydata$total_movies.CINEMA_RATING, breaks=bins, labels=labels)
mydata$bin <- as.numeric(mydata$bin)
# Create a histogram
rating_frequency=ggplot(mydata, aes(x=bin)) +
geom_histogram() +
xlab("Ratings") +
ylab("Frequency") +
ggtitle("Frequency based on Cinema Ratings") +
scale_x_continuous(breaks=c(1,2), labels=c("8-9", "9-10"))
#MOVIE LENGTH RANGES WITH FREQUENCIES
mydata_2=data.frame(total_movies$CINEMA_LENGTH)
bins_2 <- seq(50, 250, by=50)
# Create a new column with the bin label
labels_2 <- c("50-100", "100-150","150-200","200-250")
mydata_2$bin <- cut(mydata_2$total_movies.CINEMA_LENGTH, breaks=bins_2, labels=labels_2)
mydata_2$bin <- as.numeric(mydata_2$bin)
# Create a histogram
movie_length_frequency=ggplot(mydata_2, aes(x=bin)) +
geom_histogram() +
xlab("Length") +
ylab("Frequency") +
ggtitle("Frequency based on Cinema Length") +
scale_x_continuous(breaks=c(1,2,3,4), labels=c("50-100", "100-150","150-200","200-250"))
library(shiny); runApp('ui.r')
runApp('ui.r')
runApp('ui.r')
runApp('ui.r')
summary_df=summary(total_movies)
summary_df
runApp('ui.r')
runApp('ui.r')
runApp('ui.r')
summary_df
summary_df=as.data.frame(summary(total_movies))
View(summary_df)
summary_df=as.data.frame(summary(total_movies))
rownames(summary_df) <- NULL
summary_df
View(summary_df)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
summary_df <- summary(total_movies) %>%
as.data.frame() %>%
gather(key, value)
# extract the statistics (mean, median) from the row names
summary_df$stat <- sub("\\..*", "", rownames(summary_df))
# extract the column names from the 'key' column
summary_df$variable <- sub(".*:", "", summary_df$key)
# select only the desired columns
summary_df <- summary_df %>%
select(stat, variable, value)
# use the 'stat' column as row names
row.names(summary_df) <- summary_df$stat
summary_df <- summary_df %>%
select(-stat)
# print the resulting dataframe
summary_df
View(summary_df)
summary_df=summary(total_movies)
summary_df
library(shiny); runApp('ui.r')
runApp('ui.r')
runApp('ui.r')
runApp('ui.r')
runApp('ui.r')
runApp('ui.r')
runApp('ui.r')
runApp('ui.r')
runApp('ui.r')
runApp('ui.r')
library(shiny); runApp('ui.r')
library(shiny); runApp('ui.r')
